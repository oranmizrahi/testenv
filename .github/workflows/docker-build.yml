# .github/workflows/docker-build.yml
name: Build Docker Image

on:
  push:
    branches:
      - dev
      - staging
      - main
    tags:
      - 'v*'
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set environment and version
        id: env_vars
        run: |
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "ENV=prod" >> $GITHUB_ENV
          elif [[ ${{ github.event_name }} == 'pull_request' && ${{ github.event.pull_request.base.ref }} == 'main' ]]; then
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            MAJOR=$(echo $VERSION | cut -d. -f1 | tr -d 'v')
            VERSION="v$((MAJOR+1)).0.0"
            echo "ENV=prod" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="$BRANCH-$SHORT_SHA"
            echo "ENV=$BRANCH" >> $GITHUB_ENV
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.event_name == 'pull_request' }}
            type=raw,value=${{ env.ENV }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}